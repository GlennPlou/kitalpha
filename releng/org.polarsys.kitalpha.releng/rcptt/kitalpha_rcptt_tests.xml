<project name="rcptt-project" default="kitalpha.test.rcptt">
	<!-- properties below configure all intermediate and result files to be put in "results" folder next 
		     to a project folder. If that's ok, you can leave them as is -->
	
	<!-- - - - - - - - - - - - - - - - - - - Common Properties setting - - - - - - - - - - - - - - - - - - -->
	<!-- <property name="test-results" location="${result}"/>-->
	<property name="runner-workspace" location="${test-results}/runner-workspace"/>
	<property name="aut-workspace" location="${test-results}/aut-workspace-"/>
	<property name="aut-stdout" location="${test-results}/aut-out-"/>
	
	<!-- - - - - - - - - - - - - - - - - - - Custom Properties setting - - - - - - - - - - - - - - - - - - -->
	<property name="resourcereuse.emfscheme.tests" location="${kitalpha.git.folder}/resource reuse/tests/plugins/org.polarsys.kitalpha.resourcereuse.emfscheme.test.rcptt"/>
	<property name="html-report-resourcereuse.emfscheme" location="${result}/test-results-resourcereuse-emfscheme.html"/>
	<property name="junit-report-resourcereuse.emfscheme" location="${result}/test-results-resourcereuse-emfscheme.xml"/>
	
	<property name="common.tests" location="${kitalpha.git.folder}/common/tests/org.polarsys.kitalpha.common.rcptt"/>
	<property name="html-report-common" location="${result}/test-results-common.html"/>
	<property name="junit-report-common" location="${result}/test-results-common.xml"/>
	
	<property name="detachment.tests" location="${kitalpha.git.folder}/detachment/tests/rcptt/org.polarsys.kitalpha.detachment.tests.rcptt"/>
	<property name="html-report-detachment" location="${result}/test-results-detachment.html"/>
	<property name="junit-report-detachment" location="${result}/test-results-detachment.xml"/>
	
	<property name="docgen.tests" location="${kitalpha.git.folder}/Docgen/business/tests/rcptt/org.polarsys.kitalpha.doc.gen.test.rcptt;${kitalpha.git.folder}/Docgen/business/tests/rcptt/org.polarsys.kitalpha.doc.gen.business.ecore.test.rcptt"/>
	<property name="html-report-docgen" location="${result}/test-results-docgen.html"/>
	<property name="junit-report-docgen" location="${result}/test-results-docgen.xml"/>
	
	<property name="ad.core.tests" location="${kitalpha.git.folder}/architecture description/core/tests/org.polarsys.kitalpha.ad.core.rcptt"/>
	<property name="html-report-ad-core" location="${result}/test-results-ad-core.html"/>
	<property name="junit-report-ad-core" location="${result}/test-results-ad-core.xml"/>
	
	<property name="ad.dsl.tests" location="${kitalpha.git.folder}/architecture description/dsl/tests/org.polarsys.kitalpha.ad.viewpoint.test.rcptt;${kitalpha.git.folder}/architecture description/dsl/tests/org.polarsys.kitalpha.ad.viewpoint.cs.text.diagram.tests"/>
	<property name="html-report-ad-dsl" location="${result}/test-results-ad-dsl.html"/>
	<property name="junit-report-ad-dsl" location="${result}/test-results-ad-dsl.xml"/>
	
	
	<!-- - - - - - - - - - - - - - - - - - - - - Main target  - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="kitalpha.test.rcptt"> <!-- FIXME mix to one after memory leak is fixed-->
		<antcall target="docgen"/> 
		<antcall target="resourcereuse.emfscheme"/> 
		<antcall target="common"/> 
		<antcall target="detachment"/>
		<antcall target="ad-core"/>
		<antcall target="ad-dsl"/>
	</target>
	
	<target name="clean.runner.workspace">
		<delete dir="${runner-workspace}" failonerror="true" quiet="true" />
	</target>
	
	<target name="clean.aut.workspace">
		<delete dir="${aut-workspace}" failonerror="true" quiet="true" />
	</target>
	
	<!-- - - - - - - - - - - - - Resource resue - EMF Scheme Testsuites - - - - - - - - - - - - - - - - - -->
	<target name="resourcereuse.emfscheme" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-resourcereuse.emfscheme}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-resourcereuse.emfscheme}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${resourcereuse.emfscheme.tests}" />

			<arg value="-suites" />      
			<arg value="EMFSchme Test Suite" />

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
			
	<!-- - - - - - - - - - - - - - - - - - - -Common Testsuites - - - - - - - - - - - - - - - - - - - - - -->
	<target name="common" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-common}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-common}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${common.tests}" />

			<arg value="-tests" />      
			<arg value="Common_*" />

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - - -Detachment Testsuites - - - - - - - - - - - - - - - - - - - -->
	<target name="detachment" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-detachment}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-detachment}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${detachment.tests}" />

			<arg value="-suites" />      
			<arg value="DetachmentTestSuit" />

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - Docgen Core and Ecore Testsuites - - - - - - - - - - - - - - - -->
	<target name="docgen" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-docgen}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-docgen}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${docgen.tests}" />

			<arg value="-suites" />      
			<arg value="ecoreDocGenTestSuites;DG_ecore_testsuite" />

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
		
	<!-- - - - - - - - - - - - - - - - - - - - AD Core Testsuites - - - - - - - - - - - - - - - - - - - - -->
	<target name="ad-core" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-ad-core}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-ad-core}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${ad.core.tests}" />

			<!--arg value="-tests" />      
			<arg value="viewpointEditor_*;ViewpointManager_*;viewpointManagerView_*" /-->

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - - - AD DSL Testsuites - - - - - - - - - - - - - - - - - - - - -->
	<target name="ad-dsl" depends="clean.runner.workspace,clean.aut.workspace">
		<java jar="${tools}/rcptt/eclipse/plugins/org.eclipse.equinox.launcher_1.3.200.v20160318-1642.jar" fork="true">
			<arg value="-application" />      
			<arg value="org.eclipse.rcptt.runner.headless" />

			<arg value="-data" />
			<arg value="${runner-workspace}" />

			<arg value="-aut" />      
			<arg value="${aut-path}" />

			<arg value="-autWsPrefix" />      
			<arg value="${aut-workspace}" />
	   
			<arg value="-autConsolePrefix" />
			<arg value="${aut-stdout}"/>
			
			<arg value="-htmlReport" />
			<arg value="${html-report-ad-dsl}" />
			
			<arg value="-junitReport" />
			<arg value="${junit-report-ad-dsl}" />

			<arg value="-autVMArgs" />      
			<arg value="-Xmx800m;-XX:MaxPermSize=600M;-javaagent:${jacoco-agent-path}=destfile=${jacoco-report},append=true"/>

			<arg value="-import" />
			<arg value="${ad.dsl.tests}" />

			<arg value="-suites" />      
			<arg value="ViewpointTestSuit;DSL Test suite" />

			<arg value="-testOptions" />      
			<arg value="testExecTimeout=600;execTimeout=3600" />
		</java>
	</target>
</project>