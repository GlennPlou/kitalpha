		// read existing plugin.xml and remove generated stuff
		IFile file = ResourcesPlugin.getWorkspace().getRoot().getFile(new Path(targetPathName));
		DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();
		DocumentBuilder docBuilder = dbfac.newDocumentBuilder();
		if (file.exists()) {
			Document existingDoc = docBuilder.parse(new InputSource(file.getContents()));
			org.w3c.dom.Node existingDocRoot = existingDoc.getElementsByTagName("plugin").item(0);
			NodeList childs = existingDocRoot.getChildNodes();
			for (int i = 0; i < childs.getLength(); i++) {
				org.w3c.dom.Node item = childs.item(i);
				if (item instanceof Comment && "@generated".equals(((Comment) item).getNodeValue())) {
					List<org.w3c.dom.Node> toRemove = new ArrayList<org.w3c.dom.Node>();
					for (int j = i; j < childs.getLength(); j++) {
						item = childs.item(j);
						toRemove.add(item);
						if (item instanceof Element)
							break;
					}
					for (org.w3c.dom.Node node : toRemove)
						existingDocRoot.removeChild(node);
				}
			}
			childs = existingDocRoot.getChildNodes();
			for (int i = 0; i < childs.getLength(); i++) {
				org.w3c.dom.Node item = childs.item(i);
				if (item instanceof Element) {
					org.w3c.dom.Node adoptNode = doc.importNode(item, true);
					root.appendChild(adoptNode);
				}
			}
		}
