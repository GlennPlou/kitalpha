--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _O5gIYERyEeis75fBw2dugQ,_e-MekERzEeis75fBw2dugQ
Element-Name: genchain_005
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _wD9ogER6Eeis75fBw2dugQ
Runtime-Version: 2.4.2.201905080442
Save-Time: 6/7/19 9:57 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

with [get-view "Project Explorer" | get-tree] {
    select "library/model/My.generationchain" | get-menu "Run Generation Chain" | click
}

wait 20000



get-view "Project Explorer" | get-tree | select "library.library.cdo/src/library.library.impl/BookImpl.java" 
    | double-click
get-editor "BookImpl.java" | get-text-viewer | get-property text | equals "package library.library.impl;\n\n"
    + "import library.library.Book;\n\n"
    + "/**\n"
    + " * <!-- begin-user-doc -->\n"
    + " * An implementation of the model object '<em><b>Book</b></em>'.\n"
    + " * <!-- end-user-doc -->\n"
    + " * <p>\n"
    + " * The following features are implemented:\n"
    + " * </p>\n"
    + " * <ul>\n"
    + " *   <li>{@link library.library.impl.BookImpl#getTitle <em>Title</em>}</li>\n"
    + " *   <li>{@link library.library.impl.BookImpl#getPages <em>Pages</em>}</li>\n"
    + " *   <li>{@link library.library.impl.BookImpl#getAuthor <em>Author</em>}</li>\n"
    + " * </ul>\n"
    + " *\n"
    + " * @generated\n"
    + " */\n"
    + "public class BookImpl extends CDOObjectImpl implements Book {\n\n"
    + "\t/**\n"
    + "\t * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @see #getTitle()\n"
    + "\t * @generated\n"
    + "\t * @ordered\n"
    + "\t */\n"
    + "\tprotected static final String TITLE_EDEFAULT = null;\n\n"
    + "\t/**\n"
    + "\t * The default value of the '{@link #getPages() <em>Pages</em>}' attribute.\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @see #getPages()\n"
    + "\t * @generated\n"
    + "\t * @ordered\n"
    + "\t */\n"
    + "\tprotected static final int PAGES_EDEFAULT = 0;\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\tprotected BookImpl() {\n\n"
    + "\t\tsuper();\n\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tprotected EClass eStaticClass() {\n"
    + "\t\treturn LibraryPackage.Literals.BOOK;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tprotected int eStaticFeatureCount() {\n"
    + "\t\treturn 0;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic String getTitle() {\n\n"
    + "\t\treturn (String) eDynamicGet(LibraryPackage.BOOK__TITLE, LibraryPackage.Literals.BOOK__TITLE, true, true);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic void setTitle(String newTitle) {\n\n"
    + "\t\teDynamicSet(LibraryPackage.BOOK__TITLE, LibraryPackage.Literals.BOOK__TITLE, newTitle);\n\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic int getPages() {\n\n"
    + "\t\treturn (Integer) eDynamicGet(LibraryPackage.BOOK__PAGES, LibraryPackage.Literals.BOOK__PAGES, true, true);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic void setPages(int newPages) {\n\n"
    + "\t\teDynamicSet(LibraryPackage.BOOK__PAGES, LibraryPackage.Literals.BOOK__PAGES, newPages);\n\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic void unsetPages() {\n"
    + "\t\teDynamicUnset(LibraryPackage.BOOK__PAGES, LibraryPackage.Literals.BOOK__PAGES);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic boolean isSetPages() {\n"
    + "\t\treturn eDynamicIsSet(LibraryPackage.BOOK__PAGES, LibraryPackage.Literals.BOOK__PAGES);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic Writer getAuthor() {\n\n"
    + "\t\treturn (Writer) eDynamicGet(LibraryPackage.BOOK__AUTHOR, LibraryPackage.Literals.BOOK__AUTHOR, true, true);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\tpublic Writer basicGetAuthor() {\n\n"
    + "\t\treturn (Writer) eDynamicGet(LibraryPackage.BOOK__AUTHOR, LibraryPackage.Literals.BOOK__AUTHOR, false, true);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n\n"
    + "\t@Override\n"
    + "\tpublic void setAuthor(Writer newAuthor) {\n\n"
    + "\t\teDynamicSet(LibraryPackage.BOOK__AUTHOR, LibraryPackage.Literals.BOOK__AUTHOR, newAuthor);\n\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic Object eGet(int featureID, boolean resolve, boolean coreType) {\n"
    + "\t\tswitch (featureID) {\n"
    + "\t\tcase LibraryPackage.BOOK__TITLE:\n"
    + "\t\t\treturn getTitle();\n"
    + "\t\tcase LibraryPackage.BOOK__PAGES:\n"
    + "\t\t\treturn getPages();\n"
    + "\t\tcase LibraryPackage.BOOK__AUTHOR:\n"
    + "\t\t\tif (resolve)\n"
    + "\t\t\t\treturn getAuthor();\n"
    + "\t\t\treturn basicGetAuthor();\n"
    + "\t\t}\n"
    + "\t\treturn super.eGet(featureID, resolve, coreType);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic void eSet(int featureID, Object newValue) {\n"
    + "\t\tswitch (featureID) {\n"
    + "\t\tcase LibraryPackage.BOOK__TITLE:\n"
    + "\t\t\tsetTitle((String) newValue);\n"
    + "\t\t\treturn;\n"
    + "\t\tcase LibraryPackage.BOOK__PAGES:\n"
    + "\t\t\tsetPages((Integer) newValue);\n"
    + "\t\t\treturn;\n"
    + "\t\tcase LibraryPackage.BOOK__AUTHOR:\n"
    + "\t\t\tsetAuthor((Writer) newValue);\n"
    + "\t\t\treturn;\n"
    + "\t\t}\n"
    + "\t\tsuper.eSet(featureID, newValue);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic void eUnset(int featureID) {\n"
    + "\t\tswitch (featureID) {\n"
    + "\t\tcase LibraryPackage.BOOK__TITLE:\n"
    + "\t\t\tsetTitle(TITLE_EDEFAULT);\n"
    + "\t\t\treturn;\n"
    + "\t\tcase LibraryPackage.BOOK__PAGES:\n"
    + "\t\t\tunsetPages();\n"
    + "\t\t\treturn;\n"
    + "\t\tcase LibraryPackage.BOOK__AUTHOR:\n"
    + "\t\t\tsetAuthor((Writer) null);\n"
    + "\t\t\treturn;\n"
    + "\t\t}\n"
    + "\t\tsuper.eUnset(featureID);\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic boolean eIsSet(int featureID) {\n"
    + "\t\tswitch (featureID) {\n"
    + "\t\tcase LibraryPackage.BOOK__TITLE:\n"
    + "\t\t\treturn TITLE_EDEFAULT == null ? getTitle() != null : !TITLE_EDEFAULT.equals(getTitle());\n"
    + "\t\tcase LibraryPackage.BOOK__PAGES:\n"
    + "\t\t\treturn isSetPages();\n"
    + "\t\tcase LibraryPackage.BOOK__AUTHOR:\n"
    + "\t\t\treturn basicGetAuthor() != null;\n"
    + "\t\t}\n"
    + "\t\treturn super.eIsSet(featureID);\n"
    + "\t}\n\n"
    + "} //BookImpl" | verify-true
get-view "Project Explorer" | get-tree | select "library.library.cdo/src/library.library.impl/LibraryFactoryImpl.java" 
    | select "library.library.cdo/src/library.library.impl/LibraryFactoryImpl.java" | double-click
get-editor "LibraryFactoryImpl.java" | get-text-viewer | get-property text | equals "package library.library.impl;\n\n"
    + "import library.library.*;\n\n"
    + "/**\n"
    + " * <!-- begin-user-doc -->\n"
    + " * An implementation of the model <b>Factory</b>.\n"
    + " * <!-- end-user-doc -->\n"
    + " * @generated\n"
    + " */\n"
    + "public class LibraryFactoryImpl extends EFactoryImpl implements LibraryFactory {\n"
    + "\t/**\n"
    + "\t * Creates the default factory implementation.\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\tpublic static LibraryFactory init() {\n"
    + "\t\ttry {\n"
    + "\t\t\tLibraryFactory theLibraryFactory = (LibraryFactory) EPackage.Registry.INSTANCE\n"
    + "\t\t\t\t\t.getEFactory(LibraryPackage.eNS_URI);\n"
    + "\t\t\tif (theLibraryFactory != null) {\n"
    + "\t\t\t\treturn theLibraryFactory;\n"
    + "\t\t\t}\n"
    + "\t\t} catch (Exception exception) {\n"
    + "\t\t\tEcorePlugin.INSTANCE.log(exception);\n"
    + "\t\t}\n"
    + "\t\treturn new LibraryFactoryImpl();\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * Creates an instance of the factory.\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\tpublic LibraryFactoryImpl() {\n"
    + "\t\tsuper();\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic EObject create(EClass eClass) {\n"
    + "\t\tswitch (eClass.getClassifierID()) {\n"
    + "\t\tcase LibraryPackage.BOOK:\n"
    + "\t\t\treturn (EObject) createBook();\n"
    + "\t\tcase LibraryPackage.LIBRARY:\n"
    + "\t\t\treturn (EObject) createLibrary();\n"
    + "\t\tcase LibraryPackage.WRITER:\n"
    + "\t\t\treturn (EObject) createWriter();\n"
    + "\t\tcase LibraryPackage.GUIDE_BOOK_WRITER:\n"
    + "\t\t\treturn (EObject) createGuideBookWriter();\n"
    + "\t\tcase LibraryPackage.SPECIALIST_BOOK_WRITER:\n"
    + "\t\t\treturn (EObject) createSpecialistBookWriter();\n"
    + "\t\tdefault:\n"
    + "\t\t\tthrow new IllegalArgumentException(\"The class '\" + eClass.getName() + \"' is not a valid classifier\"); //$NON-NLS-1$ //$NON-NLS-2$\n"
    + "\t\t}\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic Book createBook() {\n"
    + "\t\tBookImpl book = new BookImpl();\n"
    + "\t\treturn book;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic Library createLibrary() {\n"
    + "\t\tLibraryImpl library = new LibraryImpl();\n"
    + "\t\treturn library;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic Writer createWriter() {\n"
    + "\t\tWriterImpl writer = new WriterImpl();\n"
    + "\t\treturn writer;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic GuideBookWriter createGuideBookWriter() {\n"
    + "\t\tGuideBookWriterImpl guideBookWriter = new GuideBookWriterImpl();\n"
    + "\t\treturn guideBookWriter;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic SpecialistBookWriter createSpecialistBookWriter() {\n"
    + "\t\tSpecialistBookWriterImpl specialistBookWriter = new SpecialistBookWriterImpl();\n"
    + "\t\treturn specialistBookWriter;\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Override\n"
    + "\tpublic LibraryPackage getLibraryPackage() {\n"
    + "\t\treturn (LibraryPackage) getEPackage();\n"
    + "\t}\n\n"
    + "\t/**\n"
    + "\t * <!-- begin-user-doc -->\n"
    + "\t * <!-- end-user-doc -->\n"
    + "\t * @deprecated\n"
    + "\t * @generated\n"
    + "\t */\n"
    + "\t@Deprecated\n"
    + "\tpublic static LibraryPackage getPackage() {\n"
    + "\t\treturn LibraryPackage.eINSTANCE;\n"
    + "\t}\n\n"
    + "} //LibraryFactoryImpl" | verify-true
get-view "Project Explorer" | get-tree | select "library.library.cdo/plugin.xml" | double-click
get-editor "library.library.cdo" | get-tab-folder | get-tab-item "plugin.xml" | click
get-editor "library.library.cdo" | get-text-viewer | get-property text 
    | equals "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
    + "<?eclipse version=\"3.0\"?>\n\n\n\n\n"
    + "<plugin>\n\n"
    + "   <extension point=\"org.eclipse.emf.ecore.factory_override\">\n"
    + "      <factory\n"
    + "            uri=\"http://www.eclipse.org/emf/jcrm/samples/emf/sample/Library\"\n"
    + "            class=\"library.library.impl.LibraryFactoryImpl\"\n"
    + "      />\n"
    + "   </extension>\n\n"
    + "</plugin>" | verify-true
  
get-view "Project Explorer" | get-tree | select "library.library.cdo/META-INF/MANIFEST.MF" | double-click
with [get-editor "library.library.cdo"] {
    get-section "General Information" | get-editbox -after [get-label "ID:"] | set-focus
    get-tab-folder | get-tab-item "MANIFEST.MF" | click
}
get-editor "library.library.cdo" | get-text-viewer | get-property text | equals "Manifest-Version: 1.0\n"
    + "Bundle-ManifestVersion: 2\n"
    + "Bundle-Name: %pluginName\n"
    + "Bundle-SymbolicName: library.library.cdo;singleton:=true\n"
    + "Bundle-Version: 1.0.0.qualifier\n"
    + "Bundle-ClassPath: .\n"
    + "Bundle-Vendor: %providerName\n"
    + "Bundle-Localization: plugin\n"
    + "Export-Package: library.library.impl\n"
    + "Import-Package: library.library\n"
    + "Require-Bundle: org.eclipse.core.runtime,\n"
    + " org.eclipse.emf.ecore;visibility:=reexport,\n"
    + " org.eclipse.emf.ecore.xmi;visibility:=reexport,\n"
    + " org.eclipse.emf.cdo;visibility:=reexport,\n"
    + " org.polarsys.kitalpha.emde.xmi;visibility:=reexport\n"
    + "Bundle-ActivationPolicy: lazy" | verify-true
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
