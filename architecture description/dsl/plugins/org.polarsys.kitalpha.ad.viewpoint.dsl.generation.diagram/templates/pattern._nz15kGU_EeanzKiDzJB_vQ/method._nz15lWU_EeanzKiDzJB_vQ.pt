String icon_path = null;
if (parameter.getIcon() != null && parameter.getIcon().trim().length() > 0) 
{
	icon_path = IconPathHelper.computeDslIconPath(parameter.getIcon(), parameter);
	IconPathHelper.copyIconFile(parameter.getIcon(), parameter);
}

switch (parameter.getTool_For().eClass().getClassifierID()) {
case VpdiagramPackage.NODE:
case VpdiagramPackage.BORDERED_NODE:
case VpdiagramPackage.CONTAINER:
	DiagramElement diagram_element = (DiagramElement) parameter.getTool_For();
	String mappingName = diagram_element.getName();
	AbstractNode node_mapping = (AbstractNode) parameter.getTool_For();
	NodeDomainElement nodeDomain = node_mapping.getThe_domain();
	AbstractAssociation association = nodeDomain.getChlidren_list();
	String scExpression = association != null ? "feature:"+association.getName() : nodeDomain.getQuery();
	
	/** Sirius variables creation */
	NodeCreationVariable v_container = ToolFactory.eINSTANCE.createNodeCreationVariable();
	v_container.setName("container");

	// Selection variable
	SelectModelElementVariable selection = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createSelectModelElementVariable();
	selection.setName("selection");
	selection.setMultiple(true);
	selection.setMessage("Select one or more model elements ...");
	selection.setCandidatesExpression(scExpression);
	v_container.getSubVariables().add(selection);
	
	ContainerViewVariable v_container_view = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createContainerViewVariable();
	v_container_view.setName("containerView");

	// ChangeContext creation 
	ChangeContext gotoContainer = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createChangeContext();
	String pContainer = VSMVariable.container.getExpressionVariable();
	gotoContainer.setBrowseExpression(pContainer);
	
	For _for = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createFor();
	_for.setExpression(VSMVariable.selection.getExpressionVariable());
	_for.setIteratorName(VSMVariable.i.toString());
	gotoContainer.getSubModelOperations().add(_for);
	
	// ChangeContext creation 
	ChangeContext gotoI = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createChangeContext();
	gotoI.setBrowseExpression(VSMVariable.i.getExpressionVariable());
	_for.getSubModelOperations().add(gotoI);
	CreateView createView = ToolFactory.eINSTANCE.createCreateView();
	createView.setVariableName("createdView");
	createView.setContainerViewExpression(VSMVariable.containerView.getExpressionVariable());
	DiagramElementMapping mapping = (DiagramElementMapping) GenerationUtil.getDoremiElement(node_mapping);
	createView.setMapping(mapping);
	gotoI.getSubModelOperations().add(createView);
	
	// Init creation
	InitialNodeCreationOperation init = org.eclipse.sirius.viewpoint.description.tool.ToolFactory.eINSTANCE.createInitialNodeCreationOperation();
	init.setFirstModelOperations(gotoContainer);

	// Tool creation
	MappingBasedToolDescription creationTool = null;
	String label = parameter.getLabel();
	label = label != null && ! label.isEmpty() ? label : mappingName;
	
	if (node_mapping instanceof org.polarsys.kitalpha.ad.viewpoint.dsl.as.model.vpdiagram.Node 
			||	node_mapping instanceof BorderedNode)
	{
		creationTool = ToolFactory.eINSTANCE.createNodeCreationDescription();
		NodeCreationDescription nodeCreationTool = (NodeCreationDescription) creationTool;
		if (icon_path != null && ! icon_path.isEmpty())
		{
			nodeCreationTool.setIconPath(icon_path);
		}
		
		NodeMapping nm = (NodeMapping) GenerationUtil.getDoremiElement(node_mapping);
		nodeCreationTool.getNodeMappings().add(nm);
		nodeCreationTool.setName(mappingName + "ViewCreationTool");
		nodeCreationTool.setLabel(label);
		nodeCreationTool.setVariable(v_container);
		nodeCreationTool.setViewVariable(v_container_view);
		nodeCreationTool.setInitialOperation(init);
	}
	else
	{
		creationTool = ToolFactory.eINSTANCE.createContainerCreationDescription();
		ContainerCreationDescription containerCreationTool = (ContainerCreationDescription) creationTool;
		if (icon_path != null && ! icon_path.isEmpty())
		{
			containerCreationTool.setIconPath(icon_path);
		}
		
		ContainerMapping cm = (ContainerMapping) GenerationUtil.getDoremiElement(node_mapping);
		containerCreationTool.getContainerMappings().add(cm);
		containerCreationTool.setName(mappingName + "ViewCreationTool");
		containerCreationTool.setLabel(label);
		containerCreationTool.setVariable(v_container);
		containerCreationTool.setViewVariable(v_container_view);
		containerCreationTool.setInitialOperation(init);
	}
	
	if (creationTool != null && parameter.getIcon() != null && parameter.getIcon().trim().length() > 0)
	{
		// FIXME : To finish
	}
	
	dslvpToolElement = parameter;
	abstractToolDescription = creationTool;
	break;

case VpdiagramPackage.EDGE:
	// No support for Edges
	break;
}