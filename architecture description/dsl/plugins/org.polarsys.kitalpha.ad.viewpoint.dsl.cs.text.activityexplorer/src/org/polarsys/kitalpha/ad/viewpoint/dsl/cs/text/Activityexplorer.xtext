/*******************************************************************************
 * Copyright (c) 2014 Thales Global Services S.A.S.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *  Thales Global Services S.A.S - initial API and implementation
 ******************************************************************************/
grammar org.polarsys.kitalpha.ad.viewpoint.dsl.cs.text.Activityexplorer with org.polarsys.kitalpha.ad.viewpoint.dsl.cs.text.Common


import "http://www.polarsys.org/kitalpha/ad/viewpoint/dsl/as/viewpointactivityexplorer/1.0.0"  as activityExplorer
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


/**
 * @author: Faycal ABKA
 */

ViewpointActivityExplorer returns activityExplorer::ViewpointActivityExplorer:
	'Activity' 'Explorer'
	name=FQN
	'{'
		(ownedNewPages = Pages)? &
		(ownedSectionsExtension = Sections)? &
		(ownedActivitiesExtension = Activities)? 
	'}'
;


Pages returns activityExplorer::Pages:
	{activityExplorer::Pages}
	'Pages' '{'
		 ownedActivityExplorerPages+=Page
		  (ownedActivityExplorerPages+=Page)* 
	'}'
;

Sections returns activityExplorer::Sections:
	{activityExplorer::Sections}
	'Sections' '{'
		 ownedSectionsExtensions+=SectionExtension 
		 (ownedSectionsExtensions+=SectionExtension)*
	'}'
;

Activities returns activityExplorer::Activities:
	{activityExplorer::Activities}
	'Activities' '{'
		ownedActivitiesExtensions+=ActivityExtension
		(ownedActivitiesExtensions+=ActivityExtension)*
	'}'
;


Page returns activityExplorer::Page:
	{activityExplorer::Page}
	
	'Page' name=STRING
	'{'
		
		('model' 'type' modelType = STRING)?
		('id' activityExplorerItemID=FQN)?
		'index' index=EInt
		
		(ownedOverview=Overview)?
		
		('header' '{'
			('image' 'on' ':' imagePathOn=STRING)?
			('image' 'off' ':' imagePathOff=STRING)?
		'}')?
		
		('tab' 'name' tabName=STRING)?
		('predicated' ':' hasPredicate=EBoolean)?
		('show' 'viewer' ':' showViewer=EBoolean)?
	'}'
;

Overview returns activityExplorer::Overview:
	{activityExplorer::Overview}
	'Overview'
	'{'
		('description' description=STRING)?
		('image' 'on'  ':' imagePathOn=STRING)?
		('image' 'off' ':' imagePathOff=STRING)?
	'}';



SectionExtension returns activityExplorer::SectionExtension:
	{activityExplorer::SectionExtension}
	'section' name=STRING
	'{'
		('id' activityExplorerItemID=FQN)?
		'extended' 'page' extendedPageID=FQN
		'index' index = EInt
		('filtering' ':' filtering = EBoolean)?
		('expanded' ':' expanded = EBoolean)?
	'}';

ActivityExtension returns activityExplorer::ActivityExtension:
	{activityExplorer::ActivityExtension}
	
	'activity' name=STRING
	'{'
		('id' activityExplorerItemID=FQN)?
		'extended' 'section' extendedSectionID=FQN
		'index' index=EInt
		('predicated' ':' hasPredicate=EBoolean)?
		('icon' ':' imagePathOff=STRING)?
		
	'}';