URI DOC_GEN_ACTIVITY_MODEL_URI = URI.createPlatformPluginURI("/org.polarsys.kitalpha.doc.gen.business.ecore/egf/EcoreDocGenLauncher.fcore#", false);
String DOC_GEN_ACTIVITY_ID = "_B9nwIR4UEeSYicwoCfn9sQ";

/** Preparing the contract values **/
Map<String, Type> contract2type = new HashMap<String, Type>();

// Set ecoreFilePath contract value
TypeString typeString = TypesFactory.eINSTANCE.createTypeString();
typeString.setValue(ecorePath);
contract2type.put("ecoreFilePath", typeString);

// Set outputDirectoryPath contract value
typeString = TypesFactory.eINSTANCE.createTypeString();
typeString.setValue(pluginName + "/" + outputDirectoryPath);
contract2type.put("outputDirectoryPath", typeString);

// Setting the branding contracts values
TypeString copyrightTypeString = TypesFactory.eINSTANCE.createTypeString();
copyrightTypeString.setValue(copyright);
contract2type.put("copyright", copyrightTypeString);

TypeString logoPathTypeString = TypesFactory.eINSTANCE.createTypeString();
logoPathTypeString.setValue(logoPath);
contract2type.put("logo.path", logoPathTypeString);

TypeString logoAltTypeString = TypesFactory.eINSTANCE.createTypeString();
logoAltTypeString.setValue(logoAlt);
contract2type.put("logo.alt", logoAltTypeString);


/** Adding the Ecore documentation luncher to the FC.  **/
@SuppressWarnings("unchecked")
Map<GenerationElement, FactoryComponent> fcs = (Map<GenerationElement, FactoryComponent>) ctx.getValue(FcoreBuilderConstants.CURRENT_FCORE);
FactoryComponent fc = fcs.get((GenerationElement) (parameter.eContainer()));
Resource eResource = fc.eResource();
ResourceSet resourceSet = eResource.getResourceSet();
Activity activity = (Activity) resourceSet.getResource(DOC_GEN_ACTIVITY_MODEL_URI, true).getEObject(DOC_GEN_ACTIVITY_ID);
ProductionPlan pp = (ProductionPlan) fc.getOrchestration();
ActivityInvocationHelper.addInvocation(pp, activity, contract2type);